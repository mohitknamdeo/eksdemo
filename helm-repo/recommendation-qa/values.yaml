ReplicaCount: 1
NameSpace: dev
Image:
  RepositoryName: 276780518338.dkr.ecr.ap-south-1.amazonaws.com/recommendations-service-qa
  Tag: recommendation-qa-withoutconfig-v1
  PullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  # tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

Container:
  Port: 80

ServiceAccount:
  # Specifies whether a service account should be created
  # create: false
  # Annotations to add to the service account
  #annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  Name: "dev-sa"

Volume:
  Name: appconf
  MountPath: /mnt/app/conf

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

Service:
  Type: NodePort
  Port: 80
  TargetPort: 80
  Annotation: /recommendations-api-qa/

SecretProvider:
  Name: aws
  ClassName: app-config-class
  Type1: "ssmparameter"
  Type2: "secretsmanager"
  Object1:
    Name: "ENV"
  Object2:
    Name: "ENV_TAG"
  Object3:
    Name: "MONGO_CONFIG_URL"
  Object4:
    Name: "SQL_HOST"
  Object5:
    Name: "SQL_DB"
  Object6:
    Name: "SQL_USER"
  Object7:
    Name: "SQL_PASSWORD"
  Object8:
    Name: "VALIDATE_TOKEN_API"
  Object9:
    Name: "ALB_TAG"

Ingress:
  enabled: true
  ClassName: "alb-ingress-class"
  Rule:
    Path1: /recommendations-api-qa/docs
    Path2: /recommendations-api-qa/
  Annotation: 
    LBName: '"eks-alb-ingress"'
    Scheme: '"internet-facing"'
    HealthCheckProtocol: '"HTTP"'
    HealthCheckPort: '"traffic-port"'
    IntervalSeconds: '"15"'
    TimeoutSeconds: '"5"'
    SuccessCode: '"200"'
      #ALBTag: '"qa"'
       # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # hosts:
    #- host: chart-example.local
    #  paths:
    #    - path: /
    #      pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
